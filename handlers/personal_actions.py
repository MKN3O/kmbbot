from aiogram import types
from dispatcher import dp
import config
import re
from bot import BotDB

@dp.message_handler(commands = "start")
async def start(message: types.Message):
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    await message.bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")


@dp.message_handler(commands = "help")
async def start(message: types.Message):
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    await message.bot.send_message(message.from_user.id, '''–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
        /spent 2000 (–∏–ª–∏ /s, –∏–ª–∏ !spent, –∏–ª–∏ !s) - —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø–∏—Å—å –æ —Ä–∞—Å—Ö–æ–¥–µ –Ω–∞ —Å—É–º–º—É 2000
        
        /earned 2000 (–∏–ª–∏ /e, –∏–ª–∏ !earned, –∏–ª–∏ !e) - —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø–∏—Å—å –æ –¥–æ—Ö–æ–¥–µ –Ω–∞ —Å—É–º–º—É 2000
        
        /history (–∏–ª–∏ /h, –∏–ª–∏ !history, –∏–ª–∏ !h) - –≤—ã–≤–µ—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –¥–µ–Ω—å 
        
        /history (–∏–ª–∏ /h, –∏–ª–∏ !history, –∏–ª–∏ !h) today (–∏–ª–∏ day, –∏–ª–∏ today, –∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è, –∏–ª–∏ –¥–µ–Ω—å) - –≤—ã–≤–µ—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –¥–µ–Ω—å 
        
        /history (–∏–ª–∏ /h, –∏–ª–∏ !history, –∏–ª–∏ !h) month (–∏–ª–∏ –º–µ—Å—è—Ü) - –≤—ã–≤–µ—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–µ—Å—è—Ü
        
        /history (–∏–ª–∏ /h, –∏–ª–∏ !history, –∏–ª–∏ !h) year (–∏–ª–∏ –≥–æ–¥) - –≤—ã–≤–µ—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –≥–æ–¥
        
        
        /help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
        
        --------------------------------------------

        –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º   
        ''')

@dp.message_handler(commands = ("spent", "earned", "s", "e"), commands_prefix = "/!")
async def start(message: types.Message):
    cmd_variants = (('/spent', '/s', '!spent', '!s'), ('/earned', '/e', '!earned', '!e'))
    operation = '-' if message.text.startswith(cmd_variants[0]) else '+'

    value = message.text
    for i in cmd_variants:
        for j in i:
            value = value.replace(j, '').strip()

    if(len(value)):
        x = re.findall(r"\d+(?:.\d+)?", value)
        if(len(x)):
            value = float(x[0].replace(',', '.'))

            BotDB.add_record(message.from_user.id, operation, value)

            if(operation == '-'):
                await message.reply("‚úÖ –ó–∞–ø–∏—Å—å –æ <u><b>—Ä–∞—Å—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
            else:
                await message.reply("‚úÖ –ó–∞–ø–∏—Å—å –æ <u><b>–¥–æ—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
        else:
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–º–º—É!")
    else:
        await message.reply("–ù–µ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞!")

@dp.message_handler(commands = ("history", "h"), commands_prefix = "/!")
async def start(message: types.Message):
    cmd_variants = ('/history', '/h', '!history', '!h')
    within_als = {
        "day": ('today', 'day', '—Å–µ–≥–æ–¥–Ω—è', '–¥–µ–Ω—å'),
        "month": ('month', '–º–µ—Å—è—Ü'),
        "year": ('year', '–≥–æ–¥'),
    }

    cmd = message.text
    for r in cmd_variants:
        cmd = cmd.replace(r, '').strip()

    within = 'day'
    if(len(cmd)):
        for k in within_als:
            for als in within_als[k]:
                if(als == cmd):
                    within = k

    records = BotDB.get_records(message.from_user.id, within)

    if(len(records)):
        answer = f"üïò –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ {within_als[within][-1]}\n\n"

        for r in records:
            answer += "<b>" + ("‚ûñ –†–∞—Å—Ö–æ–¥" if not r[2] else "‚ûï –î–æ—Ö–æ–¥") + "</b>"
            answer += f" - {r[3]}"
            answer += f" <i>({r[4]})</i>\n"

        await message.reply(answer)
    else:
        await message.reply("–ó–∞–ø–∏—Å–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")